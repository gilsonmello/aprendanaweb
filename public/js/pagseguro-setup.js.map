{"version":3,"sources":["pagseguro-setup.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pagseguro-setup.js","sourcesContent":["/**\r\n * Created by ambiente on 05/07/16.\r\n */\r\n\r\nPagSeguroDirectPayment.setSessionId($(\"[name='pedido_id']\").val());\r\nfunction setSenderHash() {\r\n    var form = document.querySelector('#pay');\r\n    var hash = PagSeguroDirectPayment.getSenderHash();\r\n\r\n    if (document.querySelector(\"input[name=senderHash]\") == null) {\r\n        var senderHash = document.createElement('input');\r\n        senderHash.setAttribute('name', \"senderHash\");\r\n        senderHash.setAttribute('type', \"hidden\");\r\n        senderHash.setAttribute('value', hash);\r\n        form.appendChild(senderHash);\r\n    }\r\n}\r\n\r\nfunction validateCPF(cpf)\r\n{\r\n    var numbers, digits, sum, i, result, equal_digits;\r\n    equal_digits = 1;\r\n    if (cpf.length < 11)\r\n        return false;\r\n    for (i = 0; i < cpf.length - 1; i++)\r\n        if (cpf.charAt(i) != cpf.charAt(i + 1))\r\n        {\r\n            equal_digits = 0;\r\n            break;\r\n        }\r\n    if (!equal_digits)\r\n    {\r\n        numbers = cpf.substring(0,9);\r\n        digits = cpf.substring(9);\r\n        sum = 0;\r\n        for (i = 10; i > 1; i--)\r\n            sum += numbers.charAt(10 - i) * i;\r\n        result = sum % 11 < 2 ? 0 : 11 - sum % 11;\r\n        if (result != digits.charAt(0))\r\n            return false;\r\n        numbers = cpf.substring(0,10);\r\n        sum = 0;\r\n        for (i = 11; i > 1; i--)\r\n            sum += numbers.charAt(11 - i) * i;\r\n        result = sum % 11 < 2 ? 0 : 11 - sum % 11;\r\n        if (result != digits.charAt(1))\r\n            return false;\r\n        return true;\r\n    }\r\n    else\r\n        return false;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction setCardBrand() {\r\n\r\n    $('#cardNumber').blur(function () {\r\n        var cardNumber = document.querySelector('#cardNumber').value;\r\n        if (cardNumber != null) {\r\n            PagSeguroDirectPayment.getBrand({\r\n                cardBin: cardNumber.replace(/ /g, ''),\r\n                success: function (data) {\r\n                    var form = document.querySelector('#pay');\r\n                    var brand = JSON.stringify(data.brand.name).replace(/\"/g, '');\r\n                    if (document.querySelector(\"input[name=cardBrand]\") == null) {\r\n                        var cardBrand = document.createElement('input');\r\n                        cardBrand.setAttribute('name', \"cardBrand\");\r\n                        cardBrand.setAttribute('type', \"hidden\");\r\n                        cardBrand.setAttribute('value', brand);\r\n                        form.appendChild(cardBrand);\r\n                        setInstallmentAmount();\r\n                    } else {\r\n                        document.querySelector(\"input[name=cardBrand]\").value = brand;\r\n                    }\r\n                    $(\".credit-card-brand-icon\").removeClass('fa-credit-card').addClass('fa-cc-' + brand);\r\n                    $(\".invalid-card-number\").remove();\r\n                    \r\n                    $(\"#cardNumber\").css('background-color', 'initial');\r\n                    if(brand == \"\" || brand == null || cardNumber.replace(/ /g, '').length > 20){\r\n                        $(\"#cardNumber\").parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Cartão inválido\" class=\"fa fa-warning invalid-card-number\" style=\"color: red\"></i>');\r\n                        $(\"#cardNumber\").after('<p class=\"invalid-card-number\" style=\"color: red;\">Cartão inválido</p>');\r\n                        $(\"#cardNumber\").css({\r\n                            'background-color': 'rgba(249, 3, 3, 0.37)'\r\n                        });\r\n                    }\r\n                },\r\n                error: function (data, error, other) {\r\n                    $(\".invalid-card-number\").remove();\r\n                    //$(\"#cardNumber\").css('background-color', 'initial');\r\n                    $(\"#cardNumber\").parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Cartão inválido\" class=\"fa fa-warning invalid-card-number\" style=\"color: red\"></i>');\r\n                    $(\"#cardNumber\").after('<p class=\"invalid-card-number\" style=\"color: red;\">Cartão inválido</p>');\r\n                    $(\"#cardNumber\").css({\r\n                        'background-color': 'rgba(249, 3, 3, 0.37)'\r\n                    });\r\n                    //console.log(\"Erro\");\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\nfunction setCardToken() {\r\n    var parametros = {\r\n        cardNumber: document.getElementById('cardNumber').value,\r\n        brand: document.querySelector(\"input[name=cardBrand]\").value,\r\n        cvv: document.getElementById('cvv').value,\r\n        expirationMonth: document.querySelector('#expirationMonth option:checked').value,\r\n        expirationYear: document.querySelector('#expirationYear option:checked').value,\r\n        success: function (data) {\r\n            var form = document.querySelector('#pay');\r\n            var token = JSON.stringify(data.card.token).replace(/\"/g, '');\r\n            if (document.querySelector(\"input[name=cardToken]\") == null) {\r\n                var cardToken = document.createElement('input');\r\n                cardToken.setAttribute('name', \"cardToken\");\r\n                cardToken.setAttribute('type', \"hidden\");\r\n                cardToken.setAttribute('value', token);\r\n                form.appendChild(cardToken);\r\n            } else {\r\n                document.querySelector(\"input[name=cardToken]\").value = token;\r\n            }\r\n        },\r\n        error: function (data) {\r\n//            console.log('Ocorreu um erro na validação do cartão');\r\n//            console.log(JSON.stringify(data));\r\n        }\r\n    };\r\n    PagSeguroDirectPayment.createCardToken(parametros);\r\n}\r\nfunction setInstallmentAmount() {\r\n    var brand = document.querySelector(\"input[name=cardBrand]\").value;\r\n    //var brand = 'visa';\r\n    var form = document.querySelector('#pay');\r\n    PagSeguroDirectPayment.getInstallments({\r\n        amount: document.getElementById('amount').value,\r\n        maxInstallmentNoInterest: 10,\r\n        brand: brand,\r\n        success: function (data) {\r\n            //var installment = document.querySelector('#installments option:checked').value;\r\n            var installments = JSON.parse(JSON.stringify(data))['installments'];\r\n            var max_installments = document.getElementById('max_installments').value;\r\n            if (max_installments == \"unlimited\")\r\n                max_installments = -1;\r\n\r\n            if (document.querySelector(\"input[name=installmentAmount]\") == null) {\r\n                installments[brand].forEach(function (single) {\r\n                    if ((single.installmentAmount > 20 && (max_installments == -1 || single.quantity <= max_installments)) || single.quantity == 1) {\r\n                        var option = \"<option value='\" + single.quantity + \"'>\";\r\n                        option = option + single.quantity + 'x de R$ ' + single.installmentAmount.toFixed(2).replace('.', ',') + '</option>';\r\n                        $(\"#installments\").append(option);\r\n                    }\r\n                });\r\n\r\n                $(\"#card-placeholder\").remove();\r\n                var amount = installments[brand][0]['installmentAmount'];\r\n                var installmentAmount = document.createElement('input');\r\n                installmentAmount.setAttribute('name', \"installmentAmount\");\r\n                installmentAmount.setAttribute('type', \"hidden\");\r\n                installmentAmount.setAttribute('value', amount);\r\n                form.appendChild(installmentAmount);\r\n\r\n            } else {\r\n                var installment = document.querySelector('#installments option:checked').value;\r\n                var amount = installments[brand][installment - 1]['installmentAmount'];\r\n                document.querySelector(\"input[name=installmentAmount]\").value = amount;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n//Botão do Boleto\r\ndocument.querySelector(\".btn-boleto\").addEventListener('click', function (event) {\r\n    document.querySelector('#method').setAttribute('value', 'boleto');\r\n    var form = document.querySelector('#pay');\r\n    setSenderHash();\r\n    $('#button').attr('disabled', 'disabled');\r\n    $('#button').attr('disabled', 'disabled');\r\n    document.getElementById('loading').style.display = 'block';\r\n\r\n    $.ajax({\r\n        url: form.getAttribute('action'),\r\n        type: 'post',\r\n        data: $('#pay').serialize(),\r\n        success: function (data) {\r\n            var appendUrlBoleto = \"<input name='url_boleto' id='url_boleto' type='hidden'>\";\r\n            document.querySelector(\"#print-boleto\").innerHTML = appendUrlBoleto;\r\n            //Rota da tela de emissão do Banner\r\n            $('#pay').attr(\"action\", \"/carrinho/boleto-emitido\");\r\n\r\n         //  setTimeout(function () {\r\n         //       $('#url_boleto').val(data.paymentLink);\r\n         //       $('#pay').submit();\r\n         //  }, 3000);\r\n\r\n            var set_url_boleto = setInterval(function(){\r\n               if($(\"#url_boleto\").length > 0 && data.paymentLink != \"\" && data.paymentLink != undefined && data.paymentLink != null){\r\n                   $('#url_boleto').val(data.paymentLink);\r\n                   $('#pay').submit();\r\n                   clearInterval(set_url_boleto);\r\n               }\r\n\r\n            },3000);\r\n\r\n        }\r\n    });\r\n});\r\n\r\n//Escuta do botão de envio do formulário\r\ndocument.querySelector(\".btn-credit-card\").addEventListener('click', function (event) {\r\n    document.querySelector('#method').setAttribute('value', 'creditCard');\r\n    $('#button').attr('disabled', 'disabled');\r\n    document.getElementById('loadingCredit').style.display = 'block';\r\n\r\n    if (validateCreditCardFields() === false) {\r\n        document.getElementById('loadingCredit').style.display = 'none';\r\n        $('#button').removeAttr(\"disabled\");  // retirar\r\n        return false;\r\n    } else {\r\n\r\n        setTimeout(function () {\r\n            var form = document.querySelector('#pay');\r\n            setSenderHash();\r\n            if (document.querySelector(\"#method\").getAttribute('value') == \"creditCard\") {\r\n                setInstallmentAmount();\r\n                setCardToken();\r\n            }\r\n\r\n            setTimeout(function () {\r\n                form.submit();\r\n            }, 2000);\r\n            return false;\r\n\r\n        }, 1000);\r\n    }\r\n\r\n\r\n});\r\n\r\nvar valid_fields = false;\r\n\r\nfunction validateCreditCardFields() {\r\n    var is_valid = true;\r\n    var fields = $(\"#credit-card-pay\");\r\n    $(\".fa-warning\").remove();\r\n    $('.p-error').remove();\r\n\r\n    fields.find('input').each(function () {\r\n        if (isEmpty($(this)) && $(this).val() == \"\") {\r\n            is_valid = false;\r\n            $(this).css('background-color', 'rgba(249, 3, 3, 0.37)');\r\n            $(this).parent().find('label').after('&nbsp;<i data-toggle=\"tooltip\" title=\"Campo obrigatório\" class=\"fa fa-warning\" style=\"color: red\"></i>');\r\n            $(this).after('<p class=\"p-error\" style=\"color: red;\">Campo Obrigatório</p>');\r\n        } else {\r\n            //Voltando o input para o background para cor original\r\n            $(this).css('background-color', 'initial');\r\n            $(\".invalid-card-number\").remove();\r\n            //Verificando se o número digitado pelo usuário é válido\r\n            var cardNumber = document.querySelector('#cardNumber').value;\r\n            if (cardNumber != null) {\r\n                PagSeguroDirectPayment.getBrand({\r\n                    cardBin: cardNumber.replace(/ /g, ''),\r\n                    success: function (data) {\r\n                        var form = document.querySelector('#pay');\r\n                        var brand = JSON.stringify(data.brand.name).replace(/\"/g, '');\r\n                        if (document.querySelector(\"input[name=cardBrand]\") == null) {\r\n                            var cardBrand = document.createElement('input');\r\n                            cardBrand.setAttribute('name', \"cardBrand\");\r\n                            cardBrand.setAttribute('type', \"hidden\");\r\n                            cardBrand.setAttribute('value', brand);\r\n                            form.appendChild(cardBrand);\r\n                            setInstallmentAmount();\r\n                        } else {\r\n                            document.querySelector(\"input[name=cardBrand]\").value = brand;\r\n                        }\r\n                        $(\".credit-card-brand-icon\").removeClass('fa-credit-card').addClass('fa-cc-' + brand);\r\n                        $(\".invalid-card-number\").remove();\r\n                        \r\n                        if(brand == \"\" || brand == null || cardNumber.replace(/ /g, '').length > 20){\r\n\r\n                            $(\"#cardNumber\").parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Cartão inválido\" class=\"fa fa-warning invalid-card-number\" style=\"color: red\"></i>');\r\n                            $(\"#cardNumber\").after('<p class=\"invalid-card-number\" style=\"color: red;\">Cartão inválido</p>');\r\n                            $(\"#cardNumber\").css({\r\n                                'background-color': 'rgba(249, 3, 3, 0.37)'\r\n                            });\r\n                        }\r\n                    },\r\n                    error: function (data, error, other) {\r\n                        $(\".invalid-card-number\").remove();\r\n                        $(\"#cardNumber\").parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Cartão inválido\" class=\"fa fa-warning invalid-card-number\" style=\"color: red\"></i>');\r\n                        $(\"#cardNumber\").after('<p class=\"invalid-card-number\" style=\"color: red;\">Cartão inválido</p>');\r\n                        $(\"#cardNumber\").css({\r\n                            'background-color': 'rgba(249, 3, 3, 0.37)'\r\n                        });\r\n                        //console.log(\"Erro\");\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    return is_valid;\r\n\r\n}\r\nfunction isEmpty(el) {\r\n    return !$.trim(el.html());\r\n}\r\n\r\nsetCardBrand();\r\ndocument.querySelector('#pay').addEventListener('submit', function (event) {\r\n    event.preventDefault();\r\n});\r\n\r\n//Desabilitando o Submit através do ENTER\r\n$(document).keypress(function (e) {\r\n    var code = null;\r\n    code = (e.keyCode ? e.keyCode : e.which);\r\n    return (code == 13) ? false : true;\r\n});\r\n\r\n/**\r\n * Arranjo para ser refatorado\r\n */\r\n//Limpando as Sugestões de CPF, Data de Nascimento e populando campo complemento\r\n$(document).ready(function () {\r\n    $('.personal_id').val('');\r\n    $('.birthdate').val('');\r\n    $('#billAddressComplement').val('-');\r\n\r\n    $(\".invalid-personal-id\").remove();\r\n\r\n    $(\"#personal_id\").blur(function(){\r\n        $(\".label-error\").remove();\r\n        $(\".p-error\").remove();\r\n        console.log($(this).parent().find('i'), $(this).parent());\r\n        $(this).parent().find('i').remove();\r\n        //console.log(validateCPF($(this).val().replace(\".\",\"\").replace(\".\",\"\").replace(\"-\",\"\")));\r\n        if(!validateCPF($(this).val().replace(\".\",\"\").replace(\".\",\"\").replace(\"-\",\"\"))){\r\n            $(this).css({\r\n                'background-color': 'rgba(249, 3, 3, 0.37)'\r\n            });\r\n            $(this).parent().find('label').after('<i data-toggle=\"tooltip\" title=\"CPF Inválido\" class=\"fa fa-warning invalid-personal-id\" style=\"color: red\"></i>');\r\n            $(this).after('<p class=\"p-error\" style=\"color: red;\">CPF Inválido</p>');\r\n        }\r\n    });\r\n    $(\".birthdate\").blur(function(){\r\n        $(\".invalid-birthdate\").remove();\r\n        if(parseDate($(this).val()) == null){\r\n\r\n            $(this).parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Data de Nascimento Inválida\" class=\"fa fa-warning invalid-birthdate\" style=\"color: red\"></i>');\r\n\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\nfunction parseDate(str) {\r\n    var m = str.match(/^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/);\r\n    return (m) ? new Date(m[3], m[2]-1, m[1]) : null;\r\n}"]}