{"version":3,"sources":["pagseguro-setup.js"],"names":[],"mappingsfile":"pagseguro-setup.js","sourcesContent":["/**\n * Created by ambiente on 05/07/16.\n */\nPagSeguroDirectPayment.setSessionId($(\"[name='pedido_id']\").val());\nfunction setSenderHash() {\n    var form = document.querySelector('#pay');\n    var hash = PagSeguroDirectPayment.getSenderHash();\n\n    if (document.querySelector(\"input[name=senderHash]\") == null) {\n        var senderHash = document.createElement('input');\n        senderHash.setAttribute('name', \"senderHash\");\n        senderHash.setAttribute('type', \"hidden\");\n        senderHash.setAttribute('value', hash);\n        form.appendChild(senderHash);\n    }\n}\n\nfunction validateCPF(cpf)\n{\n    var numbers, digits, sum, i, result, equal_digits;\n    equal_digits = 1;\n    if (cpf.length < 11)\n        return false;\n    for (i = 0; i < cpf.length - 1; i++)\n        if (cpf.charAt(i) != cpf.charAt(i + 1))\n        {\n            equal_digits = 0;\n            break;\n        }\n    if (!equal_digits)\n    {\n        numbers = cpf.substring(0,9);\n        digits = cpf.substring(9);\n        sum = 0;\n        for (i = 10; i > 1; i--)\n            sum += numbers.charAt(10 - i) * i;\n        result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n        if (result != digits.charAt(0))\n            return false;\n        numbers = cpf.substring(0,10);\n        sum = 0;\n        for (i = 11; i > 1; i--)\n            sum += numbers.charAt(11 - i) * i;\n        result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n        if (result != digits.charAt(1))\n            return false;\n        return true;\n    }\n    else\n        return false;\n}\n\n\n\n\n\n\nfunction setCardBrand() {\n\n    $('#cardNumber').blur(function () {\n        var cardNumber = document.querySelector('#cardNumber').value;\n        if (cardNumber != null) {\n            PagSeguroDirectPayment.getBrand({\n                cardBin: cardNumber.replace(/ /g, ''),\n                success: function (data) {\n                    var form = document.querySelector('#pay');\n                    var brand = JSON.stringify(data.brand.name).replace(/\"/g, '');\n                    if (document.querySelector(\"input[name=cardBrand]\") == null) {\n                        var cardBrand = document.createElement('input');\n                        cardBrand.setAttribute('name', \"cardBrand\");\n                        cardBrand.setAttribute('type', \"hidden\");\n                        cardBrand.setAttribute('value', brand);\n                        form.appendChild(cardBrand);\n                        setInstallmentAmount();\n                    } else {\n                        document.querySelector(\"input[name=cardBrand]\").value = brand;\n                    }\n                    $(\".credit-card-brand-icon\").removeClass('fa-credit-card').addClass('fa-cc-' + brand);\n                    $(\".invalid-card-number\").remove();\n                    \n                    $(\"#cardNumber\").css('background-color', 'initial');\n                    if(brand == \"\" || brand == null || cardNumber.replace(/ /g, '').length > 20){\n                        $(\"#cardNumber\").parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Cartão inválido\" class=\"fa fa-warning invalid-card-number\" style=\"color: red\"></i>');\n                        $(\"#cardNumber\").after('<p class=\"invalid-card-number\" style=\"color: red;\">Cartão inválido</p>');\n                        $(\"#cardNumber\").css({\n                            'background-color': 'rgba(249, 3, 3, 0.37)'\n                        });\n                    }\n                },\n                error: function (data, error, other) {\n                    $(\".invalid-card-number\").remove();\n                    //$(\"#cardNumber\").css('background-color', 'initial');\n                    $(\"#cardNumber\").parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Cartão inválido\" class=\"fa fa-warning invalid-card-number\" style=\"color: red\"></i>');\n                    $(\"#cardNumber\").after('<p class=\"invalid-card-number\" style=\"color: red;\">Cartão inválido</p>');\n                    $(\"#cardNumber\").css({\n                        'background-color': 'rgba(249, 3, 3, 0.37)'\n                    });\n                    //console.log(\"Erro\");\n                }\n            });\n        }\n    });\n}\nfunction setCardToken() {\n    var parametros = {\n        cardNumber: document.getElementById('cardNumber').value,\n        brand: document.querySelector(\"input[name=cardBrand]\").value,\n        cvv: document.getElementById('cvv').value,\n        expirationMonth: document.querySelector('#expirationMonth option:checked').value,\n        expirationYear: document.querySelector('#expirationYear option:checked').value,\n        success: function (data) {\n            var form = document.querySelector('#pay');\n            var token = JSON.stringify(data.card.token).replace(/\"/g, '');\n            if (document.querySelector(\"input[name=cardToken]\") == null) {\n                var cardToken = document.createElement('input');\n                cardToken.setAttribute('name', \"cardToken\");\n                cardToken.setAttribute('type', \"hidden\");\n                cardToken.setAttribute('value', token);\n                form.appendChild(cardToken);\n            } else {\n                document.querySelector(\"input[name=cardToken]\").value = token;\n            }\n        },\n        error: function (data) {\n//            console.log('Ocorreu um erro na validação do cartão');\n//            console.log(JSON.stringify(data));\n        }\n    };\n    PagSeguroDirectPayment.createCardToken(parametros);\n}\nfunction setInstallmentAmount() {\n    var brand = document.querySelector(\"input[name=cardBrand]\").value;\n    //var brand = 'visa';\n    var form = document.querySelector('#pay');\n    PagSeguroDirectPayment.getInstallments({\n        amount: document.getElementById('amount').value,\n        maxInstallmentNoInterest: 10,\n        brand: brand,\n        success: function (data) {\n\n            //var installment = document.querySelector('#installments option:checked').value;\n            var installments = JSON.parse(JSON.stringify(data))['installments'];\n            var max_installments = document.getElementById('max_installments').value;\n            if (max_installments == \"unlimited\")\n                max_installments = -1;\n\n            if (document.querySelector(\"input[name=installmentAmount]\") == null) {\n                installments[brand].forEach(function (single) {\n                    if ((single.installmentAmount > 20 && (max_installments == -1 || single.quantity <= max_installments)) || single.quantity == 1) {\n                        var option = \"<option value='\" + single.quantity + \"'>\";\n                        option = option + single.quantity + 'x de R$ ' + single.installmentAmount.toFixed(2).replace('.', ',') + '</option>';\n                        $(\"#installments\").append(option);\n                    }\n                });\n\n                $(\"#card-placeholder\").remove();\n                var amount = installments[brand][0]['installmentAmount'];\n                var installmentAmount = document.createElement('input');\n                installmentAmount.setAttribute('name', \"installmentAmount\");\n                installmentAmount.setAttribute('type', \"hidden\");\n                installmentAmount.setAttribute('value', amount);\n                form.appendChild(installmentAmount);\n\n            } else {\n                var installment = document.querySelector('#installments option:checked').value;\n                var amount = installments[brand][installment - 1]['installmentAmount'];\n                document.querySelector(\"input[name=installmentAmount]\").value = amount;\n            }\n        },\n        error: function(data){\n        },\n        complete: function(data){\n\n        }\n    });\n}\n\n//Botão do Boleto\ndocument.querySelector(\".btn-boleto\").addEventListener('click', function (event) {\n    document.querySelector('#method').setAttribute('value', 'boleto');\n    var form = document.querySelector('#pay');\n    setSenderHash();\n    $('#button').attr('disabled', 'disabled');\n    $('#button').attr('disabled', 'disabled');\n    document.getElementById('loading').style.display = 'block';\n\n    $.ajax({\n        url: form.getAttribute('action'),\n        type: 'post',\n        data: $('#pay').serialize(),\n        success: function (data) {\n            var appendUrlBoleto = \"<input name='url_boleto' id='url_boleto' type='hidden'>\";\n            document.querySelector(\"#print-boleto\").innerHTML = appendUrlBoleto;\n            //Rota da tela de emissão do Banner\n            $('#pay').attr(\"action\", \"/carrinho/boleto-emitido\");\n\n         //  setTimeout(function () {\n         //       $('#url_boleto').val(data.paymentLink);\n         //       $('#pay').submit();\n         //  }, 3000);\n\n            var set_url_boleto = setInterval(function(){\n               if($(\"#url_boleto\").length > 0 && data.paymentLink != \"\" && data.paymentLink != undefined && data.paymentLink != null){\n                   $('#url_boleto').val(data.paymentLink);\n                   $('#pay').submit();\n                   clearInterval(set_url_boleto);\n               }\n\n            },3000);\n\n        }\n    });\n});\n\n//Escuta do botão de envio do formulário\ndocument.querySelector(\".btn-credit-card\").addEventListener('click', function (event) {\n    document.querySelector('#method').setAttribute('value', 'creditCard');\n    $('#button').attr('disabled', 'disabled');\n    document.getElementById('loadingCredit').style.display = 'block';\n\n    if (validateCreditCardFields() === false) {\n        document.getElementById('loadingCredit').style.display = 'none';\n        $('#button').removeAttr(\"disabled\");  // retirar\n        return false;\n    } else {\n\n        setTimeout(function () {\n            var form = document.querySelector('#pay');\n            setSenderHash();\n            if (document.querySelector(\"#method\").getAttribute('value') == \"creditCard\") {\n                setInstallmentAmount();\n                setCardToken();\n            }\n\n            setTimeout(function () {\n                form.submit();\n            }, 2000);\n            return false;\n\n        }, 1000);\n    }\n\n\n});\n\nvar valid_fields = false;\n\nfunction validateCreditCardFields() {\n    var is_valid = true;\n    var fields = $(\"#credit-card-pay\");\n    $(\".fa-warning\").remove();\n    $('.p-error').remove();\n\n    fields.find('input').each(function () {\n        if (isEmpty($(this)) && $(this).val() == \"\") {\n            is_valid = false;\n            $(this).css('background-color', 'rgba(249, 3, 3, 0.37)');\n            $(this).parent().find('label').after('&nbsp;<i data-toggle=\"tooltip\" title=\"Campo obrigatório\" class=\"fa fa-warning\" style=\"color: red\"></i>');\n            $(this).after('<p class=\"p-error\" style=\"color: red;\">Campo Obrigatório</p>');\n        } else {\n            //Voltando o input para o background para cor original\n            $(this).css('background-color', 'initial');\n            $(\".invalid-card-number\").remove();\n            //Verificando se o número digitado pelo usuário é válido\n            var cardNumber = document.querySelector('#cardNumber').value;\n            if (cardNumber != null) {\n                PagSeguroDirectPayment.getBrand({\n                    cardBin: cardNumber.replace(/ /g, ''),\n                    success: function (data) {\n                        var form = document.querySelector('#pay');\n                        var brand = JSON.stringify(data.brand.name).replace(/\"/g, '');\n                        if (document.querySelector(\"input[name=cardBrand]\") == null) {\n                            var cardBrand = document.createElement('input');\n                            cardBrand.setAttribute('name', \"cardBrand\");\n                            cardBrand.setAttribute('type', \"hidden\");\n                            cardBrand.setAttribute('value', brand);\n                            form.appendChild(cardBrand);\n                            setInstallmentAmount();\n                        } else {\n                            document.querySelector(\"input[name=cardBrand]\").value = brand;\n                        }\n                        $(\".credit-card-brand-icon\").removeClass('fa-credit-card').addClass('fa-cc-' + brand);\n                        $(\".invalid-card-number\").remove();\n                        \n                        if(brand == \"\" || brand == null || cardNumber.replace(/ /g, '').length > 20){\n\n                            $(\"#cardNumber\").parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Cartão inválido\" class=\"fa fa-warning invalid-card-number\" style=\"color: red\"></i>');\n                            $(\"#cardNumber\").after('<p class=\"invalid-card-number\" style=\"color: red;\">Cartão inválido</p>');\n                            $(\"#cardNumber\").css({\n                                'background-color': 'rgba(249, 3, 3, 0.37)'\n                            });\n                        }\n                    },\n                    error: function (data, error, other) {\n                        $(\".invalid-card-number\").remove();\n                        $(\"#cardNumber\").parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Cartão inválido\" class=\"fa fa-warning invalid-card-number\" style=\"color: red\"></i>');\n                        $(\"#cardNumber\").after('<p class=\"invalid-card-number\" style=\"color: red;\">Cartão inválido</p>');\n                        $(\"#cardNumber\").css({\n                            'background-color': 'rgba(249, 3, 3, 0.37)'\n                        });\n                        //console.log(\"Erro\");\n                    }\n                });\n            }\n        }\n\n    });\n\n    return is_valid;\n\n}\nfunction isEmpty(el) {\n    return !$.trim(el.html());\n}\n\nsetCardBrand();\ndocument.querySelector('#pay').addEventListener('submit', function (event) {\n    event.preventDefault();\n});\n\n//Desabilitando o Submit através do ENTER\n$(document).keypress(function (e) {\n    var code = null;\n    code = (e.keyCode ? e.keyCode : e.which);\n    return (code == 13) ? false : true;\n});\n\n/**\n * Arranjo para ser refatorado\n */\n//Limpando as Sugestões de CPF, Data de Nascimento e populando campo complemento\n$(document).ready(function () {\n    $('.personal_id').val('');\n    $('.birthdate').val('');\n    $('#billAddressComplement').val('-');\n\n    $(\".invalid-personal-id\").remove();\n\n    $(\"#personal_id\").blur(function(){\n        $(\".label-error\").remove();\n        $(\".p-error\").remove();\n        console.log($(this).parent().find('i'), $(this).parent());\n        $(this).parent().find('i').remove();\n        //console.log(validateCPF($(this).val().replace(\".\",\"\").replace(\".\",\"\").replace(\"-\",\"\")));\n        if(!validateCPF($(this).val().replace(\".\",\"\").replace(\".\",\"\").replace(\"-\",\"\"))){\n            $(this).css({\n                'background-color': 'rgba(249, 3, 3, 0.37)'\n            });\n            $(this).parent().find('label').after('<i data-toggle=\"tooltip\" title=\"CPF Inválido\" class=\"fa fa-warning invalid-personal-id\" style=\"color: red\"></i>');\n            $(this).after('<p class=\"p-error\" style=\"color: red;\">CPF Inválido</p>');\n        }\n    });\n    $(\".birthdate\").blur(function(){\n        $(\".invalid-birthdate\").remove();\n        if(parseDate($(this).val()) == null){\n\n            $(this).parent().find('label').after('<i data-toggle=\"tooltip\" title=\"Data de Nascimento Inválida\" class=\"fa fa-warning invalid-birthdate\" style=\"color: red\"></i>');\n\n        }\n    });\n});\n\n\n\n\nfunction parseDate(str) {\n    var m = str.match(/^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/);\n    return (m) ? new Date(m[3], m[2]-1, m[1]) : null;\n}"]}